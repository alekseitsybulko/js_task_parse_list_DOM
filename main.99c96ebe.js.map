{"version":3,"sources":["scripts/main.js"],"names":["objectList","document","querySelectorAll","sortList","list","ulAdd","querySelector","sortedList","sort","a","b","dataset","salary","slice","replace","i","append","getEmployees","map","position","age"],"mappings":";AAAA,aA2BA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzBA,IAAMA,EAAaC,SAASC,iBAAiB,MAE7C,SAASC,EAASC,GACVC,IADgB,EAChBA,EAAQJ,SAASK,cAAc,MAMrBC,EAAAA,EALG,EAAIH,GAAMI,KAAK,SAACC,EAAGC,GACpC,OAAEA,EAAEC,QAAQC,OAAOC,MAAM,GAAGC,QAAQ,KAAM,KACtCL,EAAEE,QAAQC,OAAOC,MAAM,GAAGC,QAAQ,KAAM,OAJxB,IAOM,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBC,IAAAA,EAAiB,EAAA,MAC1BV,EAAMW,OAAOD,IARO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAYxB,SAASE,EAAab,GACb,OAAA,EAAIA,GAAMc,IAAI,SAAAT,GACZ,MAAA,CACLU,SAAUV,EAAEE,QAAQQ,SACpBP,OAAQH,EAAEE,QAAQC,OAClBQ,IAAKX,EAAEE,QAAQS,OAKrBjB,EAASH,GACTiB,EAAajB","file":"main.99c96ebe.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst objectList = document.querySelectorAll('li');\n\nfunction sortList(list) {\n  const ulAdd = document.querySelector('ul');\n  const sortedList = [...list].sort((a, b) => (\n    +(b.dataset.salary.slice(1).replace(/,/g, ''))\n    - +(a.dataset.salary.slice(1).replace(/,/g, ''))\n  ));\n\n  for (const i of sortedList) {\n    ulAdd.append(i);\n  }\n};\n\nfunction getEmployees(list) {\n  return [...list].map(a => {\n    return {\n      position: a.dataset.position,\n      salary: a.dataset.salary,\n      age: a.dataset.age,\n    };\n  });\n}\n\nsortList(objectList);\ngetEmployees(objectList);\n"]}